#!/bin/bash
# PS4 shaping. Port directions specific to PS4, Bungie, and Destiny 2.
#

QUANTUM=1500
BURST=6k
CBURST=6k
MTU=1500
COMMONOPTIONS="$COMMONOPTIONS"
VERSION=1.4

usage()
{
cat << EOF
USAGE: $0 [-hcs] [-a <adapter>] [-d <rate>] [-u <rate>]
Limit the bandwidth of an adapter
OPTIONS:
   -h           Show this message
   -a <adapter> Set the adpter
   -d <rate>    Set maximum download rate (in Kbps) and/or
   -u <rate>    Set maximum upload rate (in Kbps)
   -p           Use presets in /etc/conf.d/wondershaper.conf
   -c           Clear the limits from adapter
   -s           Show the current status of adapter
   -v           Show the current version
MODES:
   wondershaper -a <adapter> -d <rate> -u <rate>
   wondershaper -c -a <adapter>
   wondershaper -s -a <adapter>
EXAMPLES:
   wondershaper -a eth0 -d 1024 -u 512
   wondershaper -a eth0 -u 512
   wondershaper -c -a eth0
EOF
}

DSPEED=
USPEED=
IFACE=
IFB="ifb0"
MODE=

while getopts hvd:u:a:pcs o
do	case "$o" in
	h)	usage
		exit 1;;
        v)      echo "Version $VERSION"
                exit 0;;
	d)	DSPEED=$OPTARG;;
	u)      USPEED=$OPTARG;;
	a)      IFACE=$OPTARG;;
	p)      MODE="presets";;
	c)      MODE="clear";;
	s)      MODE="status";;
	[?])	usage
		exit 1;;
	esac
done

if [ "$MODE" = "presets" ]
then
    if [ -f /etc/conf.d/wondershaper.conf ]
    then
	source /etc/conf.d/wondershaper.conf
    else
	echo "/etc/conf.d/wondershaper.conf not found"
	exit 1
    fi
fi

if [[ ! -z $MODE ]] && [[ -z $IFACE ]]
then
    echo "Please supply the adapter name for the mode."
    echo ""
    usage
    exit 1
fi

if [ "$MODE" = "status" ]
then
    tc -s qdisc ls dev $IFACE
    tc -s class ls dev $IFACE
    exit
fi

if [ "$MODE" = "clear" ]
then
    tc qdisc del dev $IFACE root    2> /dev/null > /dev/null
    tc qdisc del dev $IFACE ingress 2> /dev/null > /dev/null
    tc qdisc del dev $IFB   root    2> /dev/null > /dev/null
    tc qdisc del dev $IFB   ingress 2> /dev/null > /dev/null
    ip link set dev $IFB DOWN
    exit
fi

if ( [[ -z $DSPEED ]] && [[ -z $USPEED ]] ) || [[ -z $IFACE ]]
then
    usage
    exit 1
fi

# LOW PRIORITY BY PORT and IP. SRC=PORT OUT DEST=PORT IN.
NOPRIOHOSTSRC=

# low priority destination netmasks
NOPRIOHOSTDST=

# low priority source ports
NOPRIOPORTSRC="22 33001 7777 8134"

# low priority destination ports
NOPRIOPORTDST="22 33001 7777 8134"

# HIGH priority destination ports for PS4
HIPRIOPORTDST="2001 3074 3075 7500 7501 7502 7503 7504 7505 7506 7507 7508 7509 28608 30000 30001 30002 30003 30004 30005 30006 30007 30008 30009"

# HIGH priority source ports for PS4
HIPRIOPORTSRC="2001 3074 3075 7500 7501 7502 7503 7504 7505 7506 7507 7508 7509 28608 30000 30001 30002 30003 30004 30005 30006 30007 30008 30009"

###### UPLINK SHAPING

# ROOT DEFAULT HTB

tc qdisc add dev $IFACE root handle 1: htb burst \
    default 22

# 1:10 1:20 1:20 CLASS UPLINKS

if [[ ! -z $USPEED ]]
then

    tc class add dev $IFACE parent 1: classid 1:1 htb \
        rate ${USPEED}kbit burst $BURST cburst $CBURST mtu $MTU \
        prio 5 

    # High class 1:10:

    tc class add dev $IFACE parent 1:1 classid 1:10 htb \
        rate $[40*$USPEED/100]kbit ceil $[95*$USPEED/100]kbit burst $BURST cburst $CBURST mtu $MTU \
        prio 1 

    # Meduium class 1:20 

    tc class add dev $IFACE parent 1:1 classid 1:20 htb \
        rate $[35*$USPEED/100]kbit ceil $[95*$USPEED/100]kbit burst $BURST cburst $CBURST mtu $MTU \
        prio 2 

    # Low class 1:30

    tc class add dev $IFACE parent 1:1 classid 1:30 htb \
        rate $[25*$USPEED/100]kbit ceil $[90*$USPEED/100]kbit burst $BURST cburst $CBURST mtu $MTU \
        prio 3 

    # SFQ:
    tc qdisc add dev $IFACE parent 1:10 handle 10: sfq perturb 10 quantum $QUANTUM
    tc qdisc add dev $IFACE parent 1:20 handle 20: sfq perturb 10 quantum $QUANTUM
    tc qdisc add dev $IFACE parent 1:30 handle 30: sfq perturb 10 quantum $QUANTUM

    # FILTERS

    # TOS 1:10:
    tc filter add dev $IFACE parent 1: protocol ip prio 10 u32 \
        match ip tos 0x10 0xff  flowid 1:10

    # ICMP 1:10:    
    tc filter add dev $IFACE parent 1: protocol ip prio 11 u32 \
        match ip protocol 1 0xff flowid 1:10

    # PACKETS <64 bytes 1:10:

    tc filter add dev $IFACE parent 1: protocol ip prio 12 u32 \
        match ip protocol 6 0xff \
        match u8 0x05 0x0f at 0 \
        match u16 0x0000 0xffc0 at 2 \
        flowid 1:10

    # PS4 destination ports.

    for a in $HIPRIOPORTDST
    do
        tc filter add dev $IFACE parent 1: protocol ip prio 13 u32 \
            match ip dport $a 0xffff flowid 1:20
    done
    # PS4 source ports.

    for b in $HIPRIOPORTSRC
    do
        tc filter add dev $IFACE parent 1: protocol ip prio 14 u32 \
            match ip sport $b 0xffff flowid 1:20
    done

    # BULK PRIORITY 1:20

    tc filter add dev $IFACE parent 1: protocol ip prio 16 u32 \
        match ip dst 0.0.0.0/0 flowid 1:20


    # LOW PRIORITY FILTERS
    for a in $NOPRIOPORTDST
    do
        tc filter add dev $IFACE parent 1: protocol ip prio 18 u32 \
            match ip dport $c 0xffff flowid 1:30
    done

    for c in $NOPRIOPORTSRC
    do
        tc filter add dev $IFACE parent 1: protocol ip prio 19 u32 \
            match ip sport $b 0xffff flowid 1:30
    done

    for d in $NOPRIOHOSTSRC
    do
        tc filter add dev $IFACE parent 1: protocol ip prio 20 u32 \
            match ip src $d flowid 1:30
    done

    for e in $NOPRIOHOSTDST
    do
        tc filter add dev $IFACE parent 1: protocol ip prio 21 u32 \
            match ip dst $e flowid 1:30
    done
fi

# DOWNLINK SHAPING WITH IFB INGRESS/EGRESS

# INGRESS POLICER
if [[ ! -z $DSPEED ]]
then

    # Add the IFB interface
    modprobe ifb numifbs=1
    ip link set dev $IFB up
    ip link set txqueuelen 2 dev $IFB 
    ip link set mtu 1500 dev $IFB

    # Redirect ingress (incoming) to egress ifb0
    tc qdisc add dev $IFACE handle ffff: ingress
    tc filter add dev $IFACE parent ffff: protocol ip u32 match u32 0 0 \
        action mirred egress redirect dev $IFB
    
    # Add class and rules for virtual
    tc qdisc add dev $IFB root handle 2: htb
    tc class add dev $IFB parent 2: classid 2:1 htb rate ${DSPEED}kbit 
    
    # Add filter to rule for IP address
    tc filter add dev $IFB protocol ip parent 2: prio 1 u32 match ip src 0.0.0.0/0 flowid 2:1
fi
#ifconfig wlan0 txqueuelen 16
#ifconfig eth0 txqueuelen 50
